version: "3.8"

services:
  mongo1:
    build: .
    restart: always
    environment:
      MONGO_INITDB_DATABASE: db
      MONGO_REPLICA_HOST: localhost
      MONGO_REPLICA_PORT: "27017"
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017',priority:1},{_id:1,host:'127.0.0.1:27018',priority:0.5},{_id:2,host:'127.0.0.1:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  mongo2:
    build: .
    restart: always
    environment:
      MONGO_INITDB_DATABASE: db
      MONGO_REPLICA_HOST: localhost
      MONGO_REPLICA_PORT: "27018"
    ports:
      - 27018:27018
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"

  mongo3:
    build: .
    restart: always
    environment:
      MONGO_INITDB_DATABASE: db
      MONGO_REPLICA_HOST: localhost
      MONGO_REPLICA_PORT: "27019"
    ports:
      - 27019:27019
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"

volumes:
  mongo1_data: 
    name: mongo1_data
  mongo2_data: 
    name: mongo2_data
  mongo3_data:
    name: mongo3_data
  mongo1_config:
    name: mongo1_config
  mongo2_config:
    name: mongo2_config
  mongo3_config:
    name: mongo3_config